[tool.poetry]
name = "ai-story-creator"
version = "0.1.0"
description = "AI-powered interactive story creation platform"
authors = ["AI Story Creator Team"]
readme = "README.md"
packages = [{include = "."}]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.100.0"
uvicorn = {extras = ["standard"], version = "^0.23.0"}
pydantic = "^2.0.0"
pydantic-settings = "^2.0.0"
python-dotenv = "^1.0.0"
sqlalchemy = "^2.0.0"
alembic = "^1.11.0"
asyncpg = "^0.27.0"
aiosqlite = "^0.19.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.6"
email-validator = "^2.0.0"
tenacity = "^8.2.0"
python-slugify = "^8.0.0"
rich = "^13.3.0"
# Celery for asynchronous task processing
celery = "^5.3.0"
redis = "^5.0.0"
flower = {version = "^2.0.0", optional = true}
# Image/AI processing
pillow = "^10.0.0"
# Optional dependencies
boto3 = {version = "^1.28.0", optional = true}
google-cloud-vision = {version = "^3.4.0", optional = true}

[tool.poetry.extras]
s3 = ["boto3"]  # For AWS S3 storage support
celery-monitor = ["flower"]  # For Celery monitoring
ai = ["boto3", "google-cloud-vision", "pillow"]  # For AI processing capabilities

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
httpx = "^0.24.0"
black = "^23.3.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py310"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
asyncio_mode = "auto"

[tool.flake8]
max-line-length = 88
extend-ignore = "E203, W503"
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "alembic",
]